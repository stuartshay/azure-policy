# Azure Policy & Functions Pre-commit Configuration
# This file configures pre-commit hooks to maintain code quality and consistency

repos:
  # General file formatting and checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--extend-ignore=E203,W503,F401,F841']

  # Jupyter notebook output clearing
  - repo: https://github.com/kynan/nbstripout
    rev: 0.8.1
    hooks:
      - id: nbstripout
        files: ".ipynb$"

  # Jupyter notebook linting
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.9.1
    hooks:
      - id: nbqa-black
        args: ["--line-length=88"]
      - id: nbqa-isort
        args: ["--profile=black", "--filter-files"]
      - id: nbqa-flake8
        args:
          [
            "--extend-ignore=E203,E501,F401,F541,W293,C901,F821,E226,E741,C401,F811,Q000,D100",
            "--max-line-length=120",
          ]
        additional_dependencies:
          - flake8-docstrings
          - flake8-comprehensions

  # PowerShell formatting and linting
  - repo: local
    hooks:
      - id: powershell-format
        name: PowerShell Formatter
        entry: bash
        args:
          [
            '-c',
            'for file in "$@"; do echo "Analyzing $file"; if command -v pwsh >/dev/null 2>&1; then pwsh -Command "if (Get-Module -ListAvailable PSScriptAnalyzer) { \$result = Invoke-ScriptAnalyzer -Path \"$file\" -Settings PSGallery; if (\$result) { \$result | Format-Table; exit 1 } } else { Write-Host \"PSScriptAnalyzer not available, skipping PowerShell analysis\" }"; else echo "PowerShell not available, skipping analysis"; fi; done',
            '--',
          ]
        language: system
        files: '\.ps1$'
        pass_filenames: true

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: ['--severity=warning']
        exclude: '\.zshrc$'

  # Secrets detection (temporarily disabled due to baseline update issues)
  # Run manually with: detect-secrets scan --baseline .secrets.baseline
  # - repo: https://github.com/Yelp/detect-secrets
  #   rev: v1.5.0
  #   hooks:
  #     - id: detect-secrets
  #       args: ['--baseline', '.secrets.baseline']
  #       exclude: '\.secrets\.baseline$|\.secrets\.yaml$|\.secrets\.allowlist$|package-lock\.json$|\.git/|\.venv/|\.mypy_cache/|__pycache__/|azurite-data/|\.terraform/|\.terraform\.lock\.hcl$'

  # Documentation and markdown
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.42.0
  #   hooks:
  #     - id: markdownlint
  #       args: ['--fix']
  #       exclude: 'CHANGELOG\.md$'

  # Azure specific validations
  - repo: local
    hooks:
      - id: docs-folder-enforcement
        name: Enforce Documentation Structure
        entry: bash
        args:
          [
            '-c',
            'for file in "$@"; do if [[ "$file" =~ \.md$ ]] && [[ ! "$file" =~ ^docs/ ]] && [[ ! "$file" =~ ^README\.md$ ]] && [[ ! "$file" =~ ^CHANGELOG\.md$ ]] && [[ ! "$file" =~ ^CONTRIBUTING\.md$ ]] && [[ ! "$file" =~ ^LICENSE\.md$ ]] && [[ ! "$file" =~ ^\.cline/ ]] && [[ ! "$file" =~ ^\.github/copilot_instructions\.md$ ]] && [[ ! "$file" =~ ^\.github/chatmodes/ ]] && [[ ! "$file" =~ /site-packages/ ]] && [[ ! "$file" =~ /\.venv/ ]] && [[ ! "$file" =~ modules/.*README\.md$ ]]; then echo "❌ Markdown file $file should be in docs/ folder. Please move it: mv $file docs/$(basename $file)"; exit 1; fi; done',
            '--',
          ]
        language: system
        files: '\.md$'
        pass_filenames: true

      - id: azure-policy-validation
        name: Azure Policy JSON Validation
        entry: bash
        args:
          [
            '-c',
            'for file in "$@"; do if ! jq empty "$file" 2>/dev/null; then echo "Invalid JSON in $file"; exit 1; fi; done',
            '--',
          ]
        language: system
        files: 'policies/.*\.json$'
        pass_filenames: true

      - id: bicep-validation
        name: Bicep Template Validation
        entry: bash
        args:
          [
            '-c',
            'if command -v az >/dev/null 2>&1; then for file in "$@"; do az bicep build --file "$file" --stdout >/dev/null || exit 1; done; else echo "Azure CLI not available, skipping Bicep validation"; fi',
            '--',
          ]
        language: system
        files: '\.bicep$'
        pass_filenames: true

  # Terraform formatting and validation
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.96.1
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_docs
        args:
          - --hook-config=--path-to-file=README.md
          - --hook-config=--add-to-existing-file=true
          - --hook-config=--create-file-if-not-exist=true
      - id: terraform_tflint
        args:
          - --args=--only=terraform_deprecated_interpolation
          - --args=--only=terraform_deprecated_index
          - --args=--only=terraform_unused_declarations
          - --args=--only=terraform_comment_syntax
          - --args=--only=terraform_documented_outputs
          - --args=--only=terraform_documented_variables
          - --args=--only=terraform_typed_variables
          - --args=--only=terraform_module_pinned_source
          - --args=--only=terraform_naming_convention
          - --args=--only=terraform_required_version
          - --args=--only=terraform_required_providers
          - --args=--only=terraform_standard_module_structure
      - id: terraform_checkov
        args:
          - --args=--framework terraform
          - --args=--config-file=/home/vagrant/git/azure-policy/.checkov.yaml

  # GitHub Actions linting
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7 # Use the latest version
    hooks:
      - id: actionlint

  # Security and dependency scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args:
          [
            '--exclude',
            '*/.*,*/.venv/*,*/venv/*,*/__pycache__/*,*/site-packages/*,*/tests/*',
          ]
        files: '^functions/basic/function_app\.py$'

# Configuration for specific hooks
default_language_version:
  python: python3.13
